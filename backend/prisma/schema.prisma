generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 1. Primero Usuario
model Usuario {
  id           Int                     @id @default(autoincrement())
  nombre       String
  usuario      String                  @unique
  correo       String                  @unique
  contrasena   String
  estado       Boolean                 @default(true)
  creadoEn     DateTime                @default(now())
  actualizadoEn DateTime               @updatedAt

  rolId        Int
  rol          Rol                     @relation(fields: [rolId], references: [id])

  historialModificaciones HistorialModificacion[] @relation("ModificacionesDelUsuario")
  historialResponsable    HistorialModificacion[] @relation("ModificacionesHechasPor")
}

// 2. Luego Platillo
model Platillo {
  id         Int       @id @default(autoincrement())
  nombre     String    @unique
  precio     Float
  creadoEn   DateTime  @default(now())
  disponible Boolean   @default(true)

  categoriaId Int
  categoria   Categoria @relation(fields: [categoriaId], references: [id])

  historialModificaciones HistorialModificacion[]
}


// 3. Luego Rol
model Rol {
  id       Int       @id @default(autoincrement())
  nombre   String    @unique

  usuarios Usuario[]
}

// 4. Al final HistorialModificacion
model HistorialModificacion {
  id             Int       @id @default(autoincrement())
  campo          String
  valorAnterior  String?
  valorNuevo     String?
  fecha          DateTime  @default(now())
  accion         String

  responsableId  Int
  responsable    Usuario   @relation("ModificacionesHechasPor", fields: [responsableId], references: [id])

  usuarioId      Int? 
  usuario        Usuario?  @relation("ModificacionesDelUsuario", fields: [usuarioId], references: [id])

  platilloId     Int?
  platillo       Platillo? @relation(fields: [platilloId], references: [id])
}
model Categoria {
  id        Int        @id @default(autoincrement())
  nombre    String     @unique
  creadoEn  DateTime   @default(now())

  platillos Platillo[] // Relación uno a muchos: una categoría puede tener muchos platillos
}

